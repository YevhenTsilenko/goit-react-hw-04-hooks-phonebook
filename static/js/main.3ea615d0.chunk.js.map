{"version":3,"sources":["components/Button/Button.module.css","components/ContactForm/ContactForm.module.css","components/Button/Button.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","index.js","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Button","type","onClick","btnName","disabled","className","styles","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","reset","e","preventDefault","form","label","form_input","pattern","title","required","value","onChange","currentTarget","form_btn","Filter","input","ContactList","contacts","onDelete","map","id","contact","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","find","alert","shortid","generate","universalFilter","toLowerCase","includes","hendleSearch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ea615d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__24m90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Y6p9\",\"label\":\"ContactForm_label__tMYbd\",\"form_input\":\"ContactForm_form_input__3k2zI\"};","import styles from './Button.module.css';\r\n\r\nfunction Button({ type, onClick, btnName, disabled }) {\r\n    return (\r\n      <button\r\n        type={type}\r\n        className={styles.button}\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n      >\r\n        {btnName}\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  export { Button };","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '../Button/Button';\r\nimport styles from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('')\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSubmit(name, number);\r\n        reset();\r\n    };\r\n    \r\n    const reset = () => {\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n    };\r\n        return (\r\n            <form onSubmit={onFormSubmit} className={styles.form}>\r\n                <label className={styles.label}>\r\n                  Name\r\n                    <input \r\n                        className={styles.form_input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={(e) => {\r\n                            setName(e.currentTarget.value);\r\n                        }}/>\r\n                </label>\r\n                <label className={styles.label}>\r\n                  Number\r\n                    <input \r\n                        className={styles.form_input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={number}\r\n                        onChange={(e) => {\r\n                            setNumber(e.currentTarget.value);\r\n                        }}/>\r\n                </label>\r\n                <Button type=\"submit\" btnName=\"Add contact\" disabled={!(name && number)} className={styles.form_btn}/>\r\n            </form>\r\n        )\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { ContactForm };","import PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n    return (\r\n        <label className={styles.label}>\r\n            Find contacts by name\r\n                <input type=\"text\" value={value} onChange={onChange} className={styles.input}/>\r\n        </label>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport { Filter };","import PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nfunction ContactList ({ contacts, onDelete }) {\r\n    return (\r\n        <ul >\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={styles.contact}>\r\n            <span>\r\n              {name}: {number}\r\n            </span>\r\n            <button\r\n              className={styles.button}\r\n              type=\"button\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  \r\n};\r\n\r\nexport { ContactList };","import React, { useState, useEffect } from 'react';\nimport shortid from 'short-id';\nimport './App.css';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport { Filter } from './components/Filter/Filter';\nimport { ContactList } from './components/ContactList/ContactList';\n\nfunction App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(localStorage.getItem('contacts')) ?? \n    [    \n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ])\n  const [filter, setFilter] = useState('');\n\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts])\n\n\n  const handleSubmit = (name, number) => {\n    if(contacts.find(contact => contact.name === name)) {\n      alert(`${name} already exists`)\n    } else {\n      setContacts((contacts) => (\n       [\n          ...contacts,\n          {\n            id: shortid.generate(),\n            name: name,\n            number: number,\n          },\n        ]\n      ))\n    }\n  }\n\n  const hendleRemove = (id) => {\n    setContacts(\n      contacts.filter((contact) => contact.id !== id)\n    );\n  }\n\n  const onFilter = (e) => {\n    setFilter(e.currentTarget.value);\n  }\n\n  const hendleSearch = () => {\n    const universalFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(universalFilter),\n    );\n  };\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm  onSubmit={handleSubmit}/>\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={onFilter}/>\n        <ContactList contacts={hendleSearch()} onDelete={hendleRemove}/>\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2QdWm\",\"input\":\"Filter_input__17a_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__3pQ4A\",\"button\":\"ContactList_button__33rnS\"};"],"sourceRoot":""}